# base node image
FROM node:22-alpine3.20 AS base

# Install all node_modules, including dev dependencies
FROM base AS deps
RUN mkdir /app && mkdir /app/prisma
WORKDIR /app

ADD package.json package-lock.json ./
ADD prisma/schema.prisma ./prisma/schema.prisma
# This installs the dependencies from package-lock.json
# (like npm install, but will fail if package.json and package-lock.json are out of sync)
RUN npm ci
RUN npx prisma generate

# Setup production node_modules
FROM base AS production-deps
RUN mkdir /app
WORKDIR /app

COPY --from=deps /app/node_modules /app/node_modules
ADD package.json package-lock.json ./
RUN npm prune --production

# Build the app
FROM base AS build
ENV NODE_ENV=production
RUN mkdir /app
WORKDIR /app

COPY --from=deps /app/node_modules /app/node_modules
ADD public ./public
ADD app ./app
ADD common ./common
ADD data ./data
ADD package.json package-lock.json tailwind.config.ts tsconfig.json postcss.config.js vite.config.ts ./
RUN npm run build

# Finally, build the production image with minimal footprint
FROM base
ENV NODE_ENV=production
ENV PORT=8080
RUN mkdir /app
WORKDIR /app

COPY --from=production-deps /app/node_modules /app/node_modules
COPY --from=build /app/build /app/build
COPY --from=build /app/public /app/public
COPY package.json package-lock.json ./

# Expose the container port to the OS
EXPOSE 8080

CMD ["npm", "run", "start"]